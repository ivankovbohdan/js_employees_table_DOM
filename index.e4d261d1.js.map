{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nvar body = document.querySelector(\"body\");\nvar thead = document.querySelector(\"thead\");\nvar titles = thead.querySelectorAll(\"th\");\nvar tbody = document.querySelector(\"tbody\");\nvar rows = tbody.querySelectorAll(\"tr\");\nvar button = document.createElement(\"button\");\nvar labelTitles = [\n    \"name\",\n    \"position\",\n    \"age\",\n    \"salary\"\n];\nvar selectOptions = [\n    \"Tokyo\",\n    \"Singapore\",\n    \"London\",\n    \"New York\",\n    \"Edinburgh\",\n    \"San Francisco\"\n];\nfunction capitalizeFirstLetter(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\nfunction formatSalary(salary) {\n    return \"$\" + parseFloat(salary).toLocaleString();\n}\nfunction sortTable(index, order) {\n    var currentRows = tbody.querySelectorAll(\"tr\");\n    var sortedRows = Array.from(currentRows).sort(function(row1, row2) {\n        var cell1 = row1.children[index].innerText.replaceAll(\"$\", \"\").replaceAll(\",\", \"\");\n        var cell2 = row2.children[index].innerText.replaceAll(\"$\", \"\").replaceAll(\",\", \"\");\n        switch(order){\n            case \"asc\":\n                if (!isNaN(parseFloat(cell1)) && !isNaN(parseFloat(cell2))) return cell1 - cell2;\n                else return cell1.localeCompare(cell2);\n            case \"desc\":\n                if (!isNaN(parseFloat(cell1)) && !isNaN(parseFloat(cell2))) return cell2 - cell1;\n                else return cell2.localeCompare(cell1);\n            default:\n                return 0;\n        }\n    });\n    tbody.innerHTML = \"\";\n    sortedRows.forEach(function(row) {\n        tbody.append(row);\n    });\n}\ntitles.forEach(function(title, index) {\n    title.addEventListener(\"click\", function() {\n        var sortOrder = \"desc\";\n        titles.forEach(function(t, i) {\n            if (i !== index) t.removeAttribute(\"data-sort-order\");\n        });\n        var currentOrder = title.getAttribute(\"data-sort-order\");\n        if (currentOrder === \"asc\") sortOrder = \"desc\";\n        else if (currentOrder === \"desc\") sortOrder = \"asc\";\n        else sortOrder = \"asc\";\n        title.setAttribute(\"data-sort-order\", sortOrder);\n        sortTable(index, sortOrder);\n    });\n});\nrows.forEach(function(row, index) {\n    row.addEventListener(\"click\", function() {\n        rows.forEach(function(r, i) {\n            if (i !== index) r.removeAttribute(\"class\");\n        });\n        row.setAttribute(\"class\", \"active\");\n    });\n});\ntbody.addEventListener(\"dblclick\", function(ev) {\n    var cell = ev.target.closest(\"td\");\n    if (tbody.querySelector(\".editing\")) return;\n    var editingInput = document.createElement(\"input\");\n    editingInput.className = \"cell-input\";\n    var columnTitle = titles[cell.cellIndex].textContent.trim().toLowerCase();\n    editingInput.type = columnTitle === \"age\" || columnTitle === \"salary\" ? \"number\" : \"text\";\n    editingInput.value = cell.textContent.replaceAll(\"$\", \"\").replaceAll(\",\", \"\");\n    cell.classList.add(\"editing\");\n    cell.innerHTML = \"\";\n    cell.append(editingInput);\n    editingInput.focus();\n    editingInput.addEventListener(\"blur\", function() {\n        var isValid = true;\n        var errorMessage = \"\";\n        if (editingInput.value.trim().length < 1) {\n            isValid = false;\n            errorMessage = \"All fields are required\";\n        } else if (columnTitle === \"name\" && (cell.textContent || editingInput.value.length < 4)) {\n            isValid = false;\n            errorMessage = \"The name must contain at least 4 letters\";\n        } else if (columnTitle === \"age\") {\n            var age = parseInt(cell.textContent, 10);\n            if (age < 18 || age > 90 || editingInput.value < 18 || editingInput.value > 90) {\n                isValid = false;\n                errorMessage = \"Age should be from 18 to 90 years\";\n            }\n        } else if (columnTitle === \"salary\") {\n            var salary = parseFloat(editingInput.value.replaceAll(\"$\", \"\").replaceAll(\",\", \"\"));\n            if (isNaN(salary) || salary < 0) {\n                isValid = false;\n                errorMessage = \"Salary should be a positive number\";\n            }\n        }\n        if (isValid) {\n            cell.classList.remove(\"editing\");\n            if (columnTitle === \"salary\") cell.textContent = formatSalary(editingInput.value.replaceAll(\"$\", \"\").replaceAll(\",\", \"\")) || cell.textContent;\n            else cell.innerHTML = editingInput.value.trim() || cell.textContent;\n            showNotification(\"success\", \"Success\", \"The employee was updated successfully\");\n        } else {\n            showNotification(\"error\", \"Error\", errorMessage);\n            editingInput.focus();\n        }\n    });\n    editingInput.addEventListener(\"keydown\", function(e) {\n        if (e.key === \"Enter\") editingInput.blur();\n    });\n});\nfunction createForm() {\n    var form = document.createElement(\"form\");\n    form.className = \"new-employee-form\";\n    button.textContent = \"Save to table\";\n    button.type = \"button\";\n    labelTitles.forEach(function(title, index) {\n        var label = document.createElement(\"label\");\n        var input = document.createElement(\"input\");\n        label.textContent = \"\".concat(capitalizeFirstLetter(title), \": \");\n        if (title === \"age\" || title === \"salary\") input.type = \"number\";\n        else input.type = \"text\";\n        input.setAttribute(\"name\", title);\n        input.setAttribute(\"data-qa\", title);\n        input.setAttribute(\"required\", true);\n        label.append(input);\n        if (index === 2) {\n            var selectLabel = document.createElement(\"label\");\n            var select = document.createElement(\"select\");\n            selectLabel.textContent = \"Office\";\n            select.setAttribute(\"data-qa\", \"office\");\n            selectOptions.forEach(function(optionText) {\n                var option = document.createElement(\"option\");\n                option.value = optionText;\n                option.textContent = optionText;\n                select.append(option);\n            });\n            selectLabel.append(select);\n            form.append(selectLabel);\n        }\n        form.append(label);\n    });\n    form.append(button);\n    body.append(form);\n}\nfunction addEmployee(newEmployee) {\n    var newRow = document.createElement(\"tr\");\n    Object.values(newEmployee).forEach(function(data) {\n        var cell = document.createElement(\"td\");\n        cell.textContent = data;\n        newRow.append(cell);\n    });\n    tbody.append(newRow);\n    document.querySelector(\".new-employee-form\").reset();\n}\ncreateForm();\nfunction showNotification(type, notTitle, notDescription) {\n    var oldNotification = body.querySelectorAll('[data-qa=\"notification\"]');\n    oldNotification.forEach(function(n) {\n        return n.remove();\n    });\n    var notification = document.createElement(\"div\");\n    notification.setAttribute(\"data-qa\", \"notification\");\n    notification.className = \"notification \".concat(type);\n    var title = document.createElement(\"h2\");\n    title.textContent = notTitle;\n    notification.append(title);\n    var description = document.createElement(\"p\");\n    description.textContent = notDescription;\n    notification.append(description);\n    body.append(notification);\n    setTimeout(function() {\n        notification.remove();\n    }, 2000);\n}\nbutton.addEventListener(\"click\", function() {\n    var form = document.querySelector(\".new-employee-form\");\n    var inputs = form.querySelectorAll(\"input\");\n    var select = form.querySelector(\"select\");\n    var inputName = inputs[0].value;\n    var age = parseInt(inputs[2].value, 10);\n    var isDataValid = true;\n    var errorMessage = \"\";\n    inputs.forEach(function(input) {\n        if (!input.value.trim()) {\n            isDataValid = false;\n            errorMessage = \"All fields are required\";\n        }\n    });\n    if (isDataValid) {\n        if (inputName.length < 4) {\n            isDataValid = false;\n            errorMessage = \"The name must contain at least 4 letters\";\n        }\n        if (age < 18 || age > 90) {\n            isDataValid = false;\n            errorMessage = \"Age should be from 18 to 90 years\";\n        }\n    }\n    if (isDataValid) {\n        addEmployee({\n            name: inputs[0].value,\n            position: inputs[1].value,\n            office: select.value,\n            age: inputs[2].value,\n            salary: formatSalary(inputs[3].value)\n        });\n        showNotification(\"success\", \"Success\", \"The employee was added successfully\");\n    } else showNotification(\"error\", \"Error\", errorMessage);\n});\n\n//# sourceMappingURL=index.e4d261d1.js.map\n","'use strict';\n\nconst body = document.querySelector('body');\nconst thead = document.querySelector('thead');\nconst titles = thead.querySelectorAll('th');\nconst tbody = document.querySelector('tbody');\nconst rows = tbody.querySelectorAll('tr');\n\nconst button = document.createElement('button');\n\nconst labelTitles = ['name', 'position', 'age', 'salary'];\nconst selectOptions = [\n  'Tokyo',\n  'Singapore',\n  'London',\n  'New York',\n  'Edinburgh',\n  'San Francisco',\n];\n\nfunction capitalizeFirstLetter(string) {\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\nfunction formatSalary(salary) {\n  return '$' + parseFloat(salary).toLocaleString();\n}\n\nfunction sortTable(index, order) {\n  const currentRows = tbody.querySelectorAll('tr');\n\n  const sortedRows = Array.from(currentRows).sort((row1, row2) => {\n    const cell1 = row1.children[index].innerText\n      .replaceAll('$', '')\n      .replaceAll(',', '');\n    const cell2 = row2.children[index].innerText\n      .replaceAll('$', '')\n      .replaceAll(',', '');\n\n    switch (order) {\n      case 'asc':\n        if (!isNaN(parseFloat(cell1)) && !isNaN(parseFloat(cell2))) {\n          return cell1 - cell2;\n        } else {\n          return cell1.localeCompare(cell2);\n        }\n\n      case 'desc':\n        if (!isNaN(parseFloat(cell1)) && !isNaN(parseFloat(cell2))) {\n          return cell2 - cell1;\n        } else {\n          return cell2.localeCompare(cell1);\n        }\n\n      default:\n        return 0;\n    }\n  });\n\n  tbody.innerHTML = '';\n\n  sortedRows.forEach((row) => {\n    tbody.append(row);\n  });\n}\n\ntitles.forEach((title, index) => {\n  title.addEventListener('click', () => {\n    let sortOrder = 'desc';\n\n    titles.forEach((t, i) => {\n      if (i !== index) {\n        t.removeAttribute('data-sort-order');\n      }\n    });\n\n    const currentOrder = title.getAttribute('data-sort-order');\n\n    if (currentOrder === 'asc') {\n      sortOrder = 'desc';\n    } else if (currentOrder === 'desc') {\n      sortOrder = 'asc';\n    } else {\n      sortOrder = 'asc';\n    }\n\n    title.setAttribute('data-sort-order', sortOrder);\n\n    sortTable(index, sortOrder);\n  });\n});\n\nrows.forEach((row, index) => {\n  row.addEventListener('click', () => {\n    rows.forEach((r, i) => {\n      if (i !== index) {\n        r.removeAttribute('class');\n      }\n    });\n\n    row.setAttribute('class', 'active');\n  });\n});\n\ntbody.addEventListener('dblclick', (ev) => {\n  const cell = ev.target.closest('td');\n\n  if (tbody.querySelector('.editing')) {\n    return;\n  }\n\n  const editingInput = document.createElement('input');\n\n  editingInput.className = 'cell-input';\n\n  const columnTitle = titles[cell.cellIndex].textContent.trim().toLowerCase();\n\n  editingInput.type =\n    columnTitle === 'age' || columnTitle === 'salary' ? 'number' : 'text';\n\n  editingInput.value = cell.textContent.replaceAll('$', '').replaceAll(',', '');\n\n  cell.classList.add('editing');\n  cell.innerHTML = '';\n  cell.append(editingInput);\n  editingInput.focus();\n\n  editingInput.addEventListener('blur', () => {\n    let isValid = true;\n    let errorMessage = '';\n\n    if (editingInput.value.trim().length < 1) {\n      isValid = false;\n      errorMessage = 'All fields are required';\n    } else if (\n      columnTitle === 'name' &&\n      (cell.textContent || editingInput.value.length < 4)\n    ) {\n      isValid = false;\n      errorMessage = 'The name must contain at least 4 letters';\n    } else if (columnTitle === 'age') {\n      const age = parseInt(cell.textContent, 10);\n\n      if (\n        age < 18 ||\n        age > 90 ||\n        editingInput.value < 18 ||\n        editingInput.value > 90\n      ) {\n        isValid = false;\n        errorMessage = 'Age should be from 18 to 90 years';\n      }\n    } else if (columnTitle === 'salary') {\n      const salary = parseFloat(\n        editingInput.value.replaceAll('$', '').replaceAll(',', ''),\n      );\n\n      if (isNaN(salary) || salary < 0) {\n        isValid = false;\n        errorMessage = 'Salary should be a positive number';\n      }\n    }\n\n    if (isValid) {\n      cell.classList.remove('editing');\n\n      if (columnTitle === 'salary') {\n        cell.textContent =\n          formatSalary(\n            editingInput.value.replaceAll('$', '').replaceAll(',', ''),\n          ) || cell.textContent;\n      } else {\n        cell.innerHTML = editingInput.value.trim() || cell.textContent;\n      }\n\n      showNotification(\n        'success',\n        'Success',\n        'The employee was updated successfully',\n      );\n    } else {\n      showNotification('error', 'Error', errorMessage);\n      editingInput.focus();\n    }\n  });\n\n  editingInput.addEventListener('keydown', (e) => {\n    if (e.key === 'Enter') {\n      editingInput.blur();\n    }\n  });\n});\n\nfunction createForm() {\n  const form = document.createElement('form');\n\n  form.className = 'new-employee-form';\n  button.textContent = 'Save to table';\n  button.type = 'button';\n\n  labelTitles.forEach((title, index) => {\n    const label = document.createElement('label');\n    const input = document.createElement('input');\n\n    label.textContent = `${capitalizeFirstLetter(title)}: `;\n\n    if (title === 'age' || title === 'salary') {\n      input.type = 'number';\n    } else {\n      input.type = 'text';\n    }\n\n    input.setAttribute('name', title);\n    input.setAttribute('data-qa', title);\n    input.setAttribute('required', true);\n\n    label.append(input);\n\n    if (index === 2) {\n      const selectLabel = document.createElement('label');\n      const select = document.createElement('select');\n\n      selectLabel.textContent = 'Office';\n      select.setAttribute('data-qa', 'office');\n\n      selectOptions.forEach((optionText) => {\n        const option = document.createElement('option');\n\n        option.value = optionText;\n        option.textContent = optionText;\n        select.append(option);\n      });\n\n      selectLabel.append(select);\n      form.append(selectLabel);\n    }\n\n    form.append(label);\n  });\n\n  form.append(button);\n  body.append(form);\n}\n\nfunction addEmployee(newEmployee) {\n  const newRow = document.createElement('tr');\n\n  Object.values(newEmployee).forEach((data) => {\n    const cell = document.createElement('td');\n\n    cell.textContent = data;\n    newRow.append(cell);\n  });\n\n  tbody.append(newRow);\n  document.querySelector('.new-employee-form').reset();\n}\n\ncreateForm();\n\nfunction showNotification(type, notTitle, notDescription) {\n  const oldNotification = body.querySelectorAll('[data-qa=\"notification\"]');\n\n  oldNotification.forEach((n) => n.remove());\n\n  const notification = document.createElement('div');\n\n  notification.setAttribute('data-qa', 'notification');\n  notification.className = `notification ${type}`;\n\n  const title = document.createElement('h2');\n\n  title.textContent = notTitle;\n  notification.append(title);\n\n  const description = document.createElement('p');\n\n  description.textContent = notDescription;\n  notification.append(description);\n\n  body.append(notification);\n\n  setTimeout(() => {\n    notification.remove();\n  }, 2000);\n}\n\nbutton.addEventListener('click', () => {\n  const form = document.querySelector('.new-employee-form');\n  const inputs = form.querySelectorAll('input');\n  const select = form.querySelector('select');\n  const inputName = inputs[0].value;\n  const age = parseInt(inputs[2].value, 10);\n\n  let isDataValid = true;\n  let errorMessage = '';\n\n  inputs.forEach((input) => {\n    if (!input.value.trim()) {\n      isDataValid = false;\n      errorMessage = 'All fields are required';\n    }\n  });\n\n  if (isDataValid) {\n    if (inputName.length < 4) {\n      isDataValid = false;\n      errorMessage = 'The name must contain at least 4 letters';\n    }\n\n    if (age < 18 || age > 90) {\n      isDataValid = false;\n      errorMessage = 'Age should be from 18 to 90 years';\n    }\n  }\n\n  if (isDataValid) {\n    addEmployee({\n      name: inputs[0].value,\n      position: inputs[1].value,\n      office: select.value,\n      age: inputs[2].value,\n      salary: formatSalary(inputs[3].value),\n    });\n\n    showNotification(\n      'success',\n      'Success',\n      'The employee was added successfully',\n    );\n  } else {\n    showNotification('error', 'Error', errorMessage);\n  }\n});\n"],"names":["form","body","document","querySelector","titles","thead","querySelectorAll","tbody","rows","button","createElement","selectOptions","formatSalary","salary","parseFloat","toLocaleString","showNotification","type","notTitle","notDescription","oldNotification","forEach","n","remove","notification","setAttribute","className","concat","title","textContent","append","description","setTimeout","index","addEventListener","order","sortedRows","sortOrder","t","i","removeAttribute","currentOrder","getAttribute","Array","from","sort","row1","row2","cell1","children","innerText","replaceAll","cell2","isNaN","localeCompare","innerHTML","row","r","ev","cell","target","closest","editingInput","columnTitle","cellIndex","trim","toLowerCase","value","classList","add","focus","isValid","errorMessage","length","age","parseInt","e","key","blur","labelTitles","label","input","string","charAt","toUpperCase","slice","selectLabel","select","optionText","option","newEmployee","newRow","inputs","inputName","isDataValid","name","position","office","Object","values","data","reset"],"version":3,"file":"index.e4d261d1.js.map"}